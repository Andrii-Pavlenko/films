{"version":3,"sources":["components/FilmList/FilmList.js","components/AddFilmsForm/AddFilmsForm.js","api/getApi.js","components/showInfo/showInfo.js","components/Header/Header.js","App.js","index.js"],"names":["FilmList","films","removeFilm","getFilmToShow","filterToShow","actualFilm","className","map","film","key","id","title","Button","onClick","style","backgroundColor","Icon","name","to","AddFilmForm","addFilm","useState","setTitle","year","setYear","onSubmit","event","preventDefault","Input","type","value","onChange","target","placeholder","FILM_URL","process","getFilms","a","fetch","response","json","method","headers","body","JSON","stringify","filmId","ShowInfo","format","stars","join","Header","sortFilms","setForFilter","filter","resetList","e","selected","App","state","forFilter","getApi","refreshFilms","setState","prevState","sort","b","localeCompare","toLowerCase","toState","item","includes","this","exact","path","React","PureComponent","ReactDOM","render","url","document","getElementById"],"mappings":"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","file":"static/js/main.75894862.chunk.js","sourcesContent":["import React from 'react';\nimport { Button, Icon } from 'semantic-ui-react';\nimport {NavLink, Switch} from \"react-router-dom\";\nimport './FilmList.scss';\n\nexport const FilmList = ({ films, removeFilm, getFilmToShow, actualFilm, filterToShow }) => {\n  return (\n    <Switch>\n      <div className=\"list\">\n        <ul className=\"list__list\">\n          {(!filterToShow ? films : filterToShow).map(film => (\n            <li key={film.id} className=\"list__film overlay blue\">\n              <label title={film.id} className=\"list__title\">\n                {film.title}\n              </label>\n              <div className=\"list__button\">\n                <Button\n                  onClick={() => removeFilm(film.id)}\n                  className=\"list__button-delete delete\"\n                  style={{backgroundColor: 'transparent'}}\n                >\n                  <Icon name=\"trash\" />\n                </Button>\n                <NavLink to=\"/info\">\n                  <Button\n                    onClick={() => getFilmToShow(film)}\n                    className=\"form__button-info info\"\n                    style={{backgroundColor: 'transparent'}}\n                  >\n                    <Icon name=\"info circle\" />\n                  </Button>\n                </NavLink>\n              </div>\n            </li>\n          ))}\n        </ul>\n\n      </div>\n    </Switch>\n  );\n}\n","import React, { useState } from 'react';\nimport { Button, Input } from 'semantic-ui-react';\nimport './AddFilmsForm.scss';\n\nexport const AddFilmForm = ({ addFilm }) => {\n\n  const [title, setTitle] = useState('');\n  const [year, setYear] = useState('');\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    if (!title) {\n      return;\n    }\n\n    addFilm(title, year);\n    setTitle('');\n    setYear('');\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className=\"form\">\n      <label>\n        <div className=\"ui label\">\n          Title:\n        </div>\n        <Input\n          type=\"text\"\n          value={title}\n          onChange={event => setTitle(event.target.value)}\n          className=\"form__input\"\n          placeholder=\"Set film title!\"\n        />\n      </label>\n\n      <label>\n        <div className=\"ui label\">\n          Year:\n        </div>\n        <Input\n          type=\"text\"\n          value={year}\n          onChange={event => setYear(event.target.value)}\n          className=\"form__input\"\n          placeholder=\"Set movie release year!\"\n        />\n      </label>\n\n      <label>\n        <div className=\"ui label\">\n          Format:\n        </div>\n        <Input\n          type=\"text\"\n          value={year}\n          onChange={event => setYear(event.target.value)}\n          className=\"form__input\"\n          placeholder=\"Set movie format!\"\n        />\n      </label>\n\n      <label>\n        <div className=\"ui label\">\n          Actors:\n        </div>\n        <Input\n          type=\"text\"\n          value={year}\n          onChange={event => setYear(event.target.value)}\n          className=\"form__input\"\n          placeholder=\"Set the lead actors!\"\n        />\n      </label>\n\n      <label>\n        <div className=\"ui label\">\n          Image:\n        </div>\n        <Input\n          type=\"text\"\n          value={year}\n          onChange={event => setYear(event.target.value)}\n          className=\"form__input\"\n          placeholder=\"Set background image!\"\n        />\n      </label>\n\n      <Button type=\"submit\" className=\"ui inverted black basic button form__button\">Add</Button>\n    </form>\n  )\n};\n","const API_URL = process.env.REACT_APP_API_URL;\nconst FILM_URL = `${API_URL}/films`;\n\nexport const getFilms = async () => {\n  const response = await fetch(FILM_URL);\n\n  return response.json();\n};\n\nexport const addFilm = async (title, year) => {\n  const response = await fetch(FILM_URL, {\n    method: 'post',\n    headers: {\n      'Content-Type': 'application/json; charset=utf-8',\n    },\n    body: JSON.stringify({ title, year }),\n  });\n\n  return response.json();\n};\n\nexport const removeFilm = async (filmId) => {\n  const response = await fetch(`${FILM_URL}/${filmId}`, {\n    method: 'delete',\n  });\n\n  return response.json();\n};\n","import React from 'react';\nimport './showInfo.scss';\n\nexport const ShowInfo = ({ actualFilm }) => {\n  return (\n    <div className=\"show-info\">\n      <p>Film name: <span className=\"show-info__text\"> {actualFilm.title}</span></p>\n      <p>Year: <span className=\"show-info__text\"> {actualFilm.year}</span></p>\n      <p>Format: <span className=\"show-info__text\"> {actualFilm.format}</span></p>\n      <p>Stars: <span className=\"show-info__text\"> {actualFilm.stars && actualFilm.stars.join(', ') + '.'}</span></p>\n    </div>\n  );\n};\n","import React from 'react';\nimport {Button, Input} from \"semantic-ui-react\";\nimport {NavLink} from \"react-router-dom\";\nimport './Header.scss';\n\nexport const Header = ({ sortFilms, setForFilter, filter, resetList }) => {\n  return (\n    <div className=\"header\">\n\n      <div className=\"header__navigation\">\n        <NavLink to=\"/\" onClick={() => resetList()}>\n          <Button type=\"button\" className=\"ui inverted button\">Home</Button>\n        </NavLink>\n\n        <NavLink to=\"/add\">\n          <Button type=\"button\" className=\"ui inverted button\">\n            Add\n          </Button>\n        </NavLink>\n      </div>\n\n      <div className=\"header__changers\">\n        <Button type=\"button\" onClick={() => sortFilms()} className=\"ui inverted button\">Sort</Button>\n        <div className=\"header__changers-filters\">\n          <Input type=\"text\" onChange={(e) => setForFilter(e.target.value)} className=\"header__changers-filters1\" placeholder=\"Set filter value!\"/>\n          <select className=\"ui compact selection dropdown\">\n            <option selected=\"\" value=\"all\">title</option>\n            <option value=\"articles\">year</option>\n            <option value=\"products\">format</option>\n            <option value=\"products\">actors</option>\n          </select>\n          <div className=\"ui inverted button header__changers-filters2\" onClick={() => filter('title')}>Filter</div>\n        </div>\n      </div>\n\n    </div>\n  );\n};\n","import React from 'react';\nimport { FilmList } from './components/FilmList';\nimport { AddFilmForm } from './components/AddFilmsForm';\nimport './App.scss';\n\nimport * as getApi from './api/getApi';\nimport { Route, Switch} from \"react-router-dom\";\nimport {ShowInfo} from \"./components/showInfo\";\nimport {Header} from \"./components/Header\";\n\n\nclass App extends React.PureComponent {\n  state = {\n    films: [],\n    forFilter: '',\n    actualFilm: '',\n    filterToShow: null,\n  };\n\n  componentDidMount() {\n    this.refreshFilms();\n  }\n\n  async refreshFilms() {\n    const films = await getApi.getFilms();\n    this.setState({ films });\n  }\n\n  addFilm = async (title, year) => {\n    await getApi.addFilm(title, year);\n    this.refreshFilms();\n  };\n\n  removeFilm = async (filmId) => {\n    await getApi.removeFilm(filmId);\n    this.refreshFilms();\n  };\n\n  sortFilms = () => {\n    this.setState(prevState => ({\n      ...prevState,\n      films: [...prevState.films].sort((a, b) => a.title.localeCompare(b.title))\n    }))\n  };\n\n  setForFilter = (value) => {\n    this.setState(prevState => ({\n      ...prevState,\n      forFilter: value.toLowerCase(),\n    }))\n  };\n\n  filter = (name) => {\n    let toState;\n\n    switch (name) {\n      case 'title':\n        toState = this.state.films.filter(item => item.title.toLowerCase().includes(this.state.forFilter));\n        break;\n      default:\n        return this.state\n    }\n    this.setState(prevState => ({\n      ...prevState,\n      filterToShow: toState,\n    }));\n  };\n\n  getFilmToShow = (film) => {\n    this.setState(prevState => ({\n      ...prevState,\n      actualFilm: film,\n    }))\n  };\n\n  resetList = () => {\n    this.setState(prevState => ({\n      ...prevState,\n      filterToShow: '',\n    }))\n  };\n\n  render() {\n    const { films, actualFilm, filterToShow } = this.state;\n\n    return (\n      <Switch>\n        <div className=\"App\">\n          <Header\n            filter={this.filter}\n            setForFilter={this.setForFilter}\n            sortFilms={this.sortFilms}\n            resetList={this.resetList}\n          />\n\n          <Route exact path=\"/add\">\n            <AddFilmForm addFilm={this.addFilm} />\n          </Route>\n          <Route exact path=\"/\">\n            <FilmList\n              filterToShow={filterToShow}\n              films={films}\n              removeFilm={this.removeFilm}\n              getFilmToShow={this.getFilmToShow}\n              actualFilm={actualFilm}\n            />\n          </Route>\n          <Route exact path=\"/info\">\n            <ShowInfo actualFilm={actualFilm} />\n          </Route>\n        </div>\n      </Switch>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Favicon from 'react-favicon';\nimport {HashRouter} from \"react-router-dom\";\nimport App from './App';\n\nReactDOM.render(\n<div>\n  <HashRouter>\n    <Favicon url=\"http://icons.iconarchive.com/icons/martz90/circle/16/video-camera-icon.png\" />\n    <App />\n  </HashRouter>\n</div>\n, document.getElementById('root'));\n"],"sourceRoot":""}